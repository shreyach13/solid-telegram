diff --git a/DSW.txt b/DSW.txt
new file mode 100644
index 0000000..907b308
--- /dev/null
+++ b/DSW.txt
@@ -0,0 +1 @@
+blah
diff --git a/docker/dswilkinson73/Dockerfile b/docker/dswilkinson73/Dockerfile
new file mode 100644
index 0000000..585625c
--- /dev/null
+++ b/docker/dswilkinson73/Dockerfile
@@ -0,0 +1,7 @@
+FROM node:current-alpine
+
+WORKDIR /home/app
+COPY SimpleWeb/package.json ./
+RUN npm install
+COPY SimpleWeb/ ./
+CMD ["npm", "start"]
diff --git a/docker/dswilkinson73/SimpleWeb/index.js b/docker/dswilkinson73/SimpleWeb/index.js
new file mode 100644
index 0000000..c072f4c
--- /dev/null
+++ b/docker/dswilkinson73/SimpleWeb/index.js
@@ -0,0 +1,12 @@
+const express = 
+require('express');
+
+const app = express();
+
+app.get('/', (req, res) => {
+  res.send('Hello Dave!');
+});
+
+app.listen(8080, () => {
+  console.log('Listening at 8080');
+});
diff --git a/docker/dswilkinson73/SimpleWeb/package.json b/docker/dswilkinson73/SimpleWeb/package.json
new file mode 100644
index 0000000..a540460
--- /dev/null
+++ b/docker/dswilkinson73/SimpleWeb/package.json
@@ -0,0 +1,8 @@
+{
+  "dependencies": {
+    "express": "*"
+  },
+  "scripts": {
+    "start": "node index.js"
+  }
+}
diff --git a/docker/dswilkinson73/databasecreate b/docker/dswilkinson73/databasecreate
new file mode 100644
index 0000000..00a6977
--- /dev/null
+++ b/docker/dswilkinson73/databasecreate
@@ -0,0 +1,5 @@
+FROM mysql:5.7
+COPY dbcreate.sh /
+RUN chmod +x /dbcreate.sh
+CMD ["touch", "/test"]
+CMD ["/dbcreate.sh"]
diff --git a/docker/dswilkinson73/docker-compose-mysql.yml b/docker/dswilkinson73/docker-compose-mysql.yml
new file mode 100644
index 0000000..483b49b
--- /dev/null
+++ b/docker/dswilkinson73/docker-compose-mysql.yml
@@ -0,0 +1,23 @@
+version: '2'
+
+services:
+  mysql:
+    image: mysql:5.7
+    hostname: dsw-sql-server
+    environment:
+      MYSQL_DATABASE: 'dswdbyyy'
+      MYSQL_USER: 'root'
+      MYSQL_ROOT_PASSWORD: abc123
+    volumes:
+            - data-mysql:/var/lib/mysql
+
+
+  create_database:
+    build:
+      context: .
+      dockerfile: databasecreate
+
+
+volumes:
+  data-mysql:
+    driver: local
diff --git a/docker/dswilkinson73/docker-compose.yml b/docker/dswilkinson73/docker-compose.yml
new file mode 100644
index 0000000..bf4c556
--- /dev/null
+++ b/docker/dswilkinson73/docker-compose.yml
@@ -0,0 +1,32 @@
+version: '2'
+
+services:
+  mysql:
+    image: mysql:5.7
+    hostname: dsw-sql-server
+    environment:
+      MYSQL_DATABASE: 'dswdbxxx'
+      MYSQL_USER: 'root'
+      MYSQL_ROOT_PASSWORD: abc123
+    volumes:
+            - data-mysql:/var/lib/mysql
+
+
+  create_database:
+    build:
+      context: .
+      dockerfile: databasecreate
+
+
+  my_app:
+    build:
+      context: .
+      dockerfile: Dockerfile
+    hostname: my-hostname
+    container_name: my_node_app
+    ports:
+      - '8080:8080'
+
+volumes:
+  data-mysql:
+    driver: local
diff --git a/docker/dswilkinson73/sql-volume-database/databasecreate b/docker/dswilkinson73/sql-volume-database/databasecreate
new file mode 100644
index 0000000..b76eeb9
--- /dev/null
+++ b/docker/dswilkinson73/sql-volume-database/databasecreate
@@ -0,0 +1,6 @@
+FROM mysql:5.7
+WORKDIR /
+COPY dbcreate.sh /
+RUN chmod +x /dbcreate.sh
+CMD ["touch", "./test"]
+CMD ["/dbcreate.sh"]
diff --git a/docker/dswilkinson73/sql-volume-database/dbcreate.sh b/docker/dswilkinson73/sql-volume-database/dbcreate.sh
new file mode 100644
index 0000000..0bc632e
--- /dev/null
+++ b/docker/dswilkinson73/sql-volume-database/dbcreate.sh
@@ -0,0 +1 @@
+echo "create database dswyeah;" |mysql -h dsw-sql-server -uroot -pabc123
diff --git a/docker/dswilkinson73/sql-volume-database/docker-compose.yml b/docker/dswilkinson73/sql-volume-database/docker-compose.yml
new file mode 100644
index 0000000..169b6ac
--- /dev/null
+++ b/docker/dswilkinson73/sql-volume-database/docker-compose.yml
@@ -0,0 +1,26 @@
+version: '3'
+
+services:
+  mysql:
+    image: mysql:5.7
+    hostname: dsw-sql-server
+    environment:
+      MYSQL_DATABASE: 'dswdbaaa'
+      MYSQL_USER: 'root'
+      MYSQL_ROOT_PASSWORD: abc123
+    volumes:
+            - data-mysql:/var/lib/mysql
+
+
+  create_database:
+    build:
+      context: .
+      dockerfile: databasecreate
+    depends_on:
+      mysql:
+        condition: service_started
+
+
+volumes:
+  data-mysql:
+    driver: local
diff --git a/docker/dswilkinson73/sql-volume-database2/Dockerfile b/docker/dswilkinson73/sql-volume-database2/Dockerfile
new file mode 100644
index 0000000..326514f
--- /dev/null
+++ b/docker/dswilkinson73/sql-volume-database2/Dockerfile
@@ -0,0 +1,6 @@
+FROM mysql:5.7
+WORKDIR /
+RUN apt-get update && apt-get install -y inetutils-ping
+ADD ./dbcreate.sh /dbcreate.sh
+RUN chmod +x /dbcreate.sh
+CMD ["/dbcreate.sh"]
diff --git a/docker/dswilkinson73/sql-volume-database2/dbcreate.sh b/docker/dswilkinson73/sql-volume-database2/dbcreate.sh
new file mode 100644
index 0000000..eec2316
--- /dev/null
+++ b/docker/dswilkinson73/sql-volume-database2/dbcreate.sh
@@ -0,0 +1,2 @@
+sleep 15 
+echo "create database dswyeah;" |mysql -uroot -pabc123
diff --git a/docker/dswilkinson73/sql-volume-database2/docker-compose.yml b/docker/dswilkinson73/sql-volume-database2/docker-compose.yml
new file mode 100644
index 0000000..4df7096
--- /dev/null
+++ b/docker/dswilkinson73/sql-volume-database2/docker-compose.yml
@@ -0,0 +1,21 @@
+version: '3.1'
+
+services:
+  mysql:
+    image: mysql:5.7
+    hostname: dswsql
+    environment:
+      MYSQL_DATABASE: dswdbaaa
+      MYSQL_USER: root
+      MYSQL_ROOT_PASSWORD: abc123
+      #    volumes:
+      # - data-mysql:/var/lib/mysql
+
+
+  create_database:
+    build:
+      context: .
+
+volumes:
+  dat-mysql:
+    driver: local
diff --git a/docker/dswilkinson73/vault-dockercompose/docker-compose.yml b/docker/dswilkinson73/vault-dockercompose/docker-compose.yml
new file mode 100644
index 0000000..64947e4
--- /dev/null
+++ b/docker/dswilkinson73/vault-dockercompose/docker-compose.yml
@@ -0,0 +1,15 @@
+version: '2'
+  
+services:
+  vault:
+    image: dswvault:latest
+    hostname: dswvault
+    ports:
+      - "8200:8200"
+
+  vault_init:
+    environment:
+      VAULT_ADDR: 'http://vault:8200'
+    build:
+      context: .
+      dockerfile: vault_init
diff --git a/docker/dswilkinson73/vault-dockercompose/vault_init b/docker/dswilkinson73/vault-dockercompose/vault_init
new file mode 100644
index 0000000..5fe2139
--- /dev/null
+++ b/docker/dswilkinson73/vault-dockercompose/vault_init
@@ -0,0 +1,7 @@
+FROM dswvault:latest
+  
+WORKDIR /
+ADD ./vault_init.sh /vault_init.sh
+RUN chmod +x /vault_init.sh
+CMD ["/vault_init.sh"]
+
diff --git a/docker/dswilkinson73/vault-dockercompose/vault_init.sh b/docker/dswilkinson73/vault-dockercompose/vault_init.sh
new file mode 100644
index 0000000..f7d4fae
--- /dev/null
+++ b/docker/dswilkinson73/vault-dockercompose/vault_init.sh
@@ -0,0 +1,15 @@
+#!/bin/bash
+sleep 10
+#UNSEAL_KEY=`/usr/bin/vault operator init -key-shares 1 -key-threshold 1 |grep "Unseal Key" |awk '{print $NF}'`
+/usr/bin/vault operator init -key-shares 1 -key-threshold 1 > /tmp/vault.txt
+UNSEAL_KEY=`cat /tmp/vault.txt |grep "Unseal Key" |awk '{print $NF}'`
+ROOT_TOKEN=`cat /tmp/vault.txt |grep "Initial Root Token" |awk '{print $NF}'`
+/usr/bin/vault operator unseal "$UNSEAL_KEY"
+
+echo "My Variables"
+echo $UNSEAL_KEY
+echo $ROOT_TOKEN
+
+export VAULT_TOKEN="$ROOT_TOKEN"
+/usr/bin/vault secrets enable -path secret kv
+/usr/bin/vault kv put secret/foo value=bar
diff --git a/docker/dswilkinson73/vault/Dockerfile b/docker/dswilkinson73/vault/Dockerfile
new file mode 100644
index 0000000..5bd1461
--- /dev/null
+++ b/docker/dswilkinson73/vault/Dockerfile
@@ -0,0 +1,8 @@
+FROM ubuntu:18.04
+  
+WORKDIR /usr/bin
+ADD ./vault /usr/bin/vault
+ADD ./vault.hcl /etc/vault.hcl
+ADD ./runvault.sh /runvault.sh
+RUN chmod +x /runvault.sh
+CMD ["/runvault.sh"]
diff --git a/docker/dswilkinson73/vault/runvault.sh b/docker/dswilkinson73/vault/runvault.sh
new file mode 100644
index 0000000..9e21fc3
--- /dev/null
+++ b/docker/dswilkinson73/vault/runvault.sh
@@ -0,0 +1,3 @@
+#!/bin/bash
+
+/usr/bin/vault server -config /etc/vault.hcl
diff --git a/docker/dswilkinson73/vault/vault.hcl b/docker/dswilkinson73/vault/vault.hcl
new file mode 100644
index 0000000..4497b6c
--- /dev/null
+++ b/docker/dswilkinson73/vault/vault.hcl
@@ -0,0 +1,7 @@
+storage "inmem" {}
+disable_mlock = true
+
+listener "tcp" {
+    address = "0.0.0.0:8200"
+    tls_disable = true
+}
